<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:task="http://www.springframework.org/schema/task"
  xmlns:sws="http://www.springframework.org/schema/web-services"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:security="http://www.springframework.org/schema/security"
  xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <sws:annotation-driven  />
    
    <aop:aspectj-autoproxy />
    <aop:config />
    
    <context:annotation-config />
    <context:property-placeholder location="classpath:/webapp.properties" />
    
    <context:component-scan base-package="org.jasig.portlet.blackboardvcportlet.dao" />
    <context:component-scan base-package="org.jasig.portlet.blackboardvcportlet.data" />
    <context:component-scan base-package="org.jasig.portlet.blackboardvcportlet.service.impl" />
    <context:component-scan base-package="org.jasig.portlet.blackboardvcportlet.security" />
    
    <!-- Task scheduling -->
    <task:annotation-driven scheduler="taskScheduler"/>
    <task:scheduler id="taskScheduler" pool-size="10" />
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/ehcache.xml" />
    </bean>

	<!-- Set this to the value of your mail host -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="${mail.host}"/>
      <property name="port" value="${mail.port}" />
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader</prop>
            </props>
        </property>
    </bean>

   <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames">  
        <list>
            <value>messages</value>
        </list>
    </property>
   </bean>
	<!-- Only needed if you want to bind via a user to LDAP
	<bean id="userService" class="org.jasig.portlet.blackboardvcportlet.service.impl.DefaultUserServiceImpl" />
   <bean id="authenticationSource" class="org.springframework.ldap.authentication.DefaultValuesAuthenticationSourceDecorator">
      <property name="target" ref="springSecurityAuthenticationSource" />
      <property name="defaultUser" value="uid=vcuser,ou=people,dc=example,dc=com" />
      <property name="defaultPassword" value="" />
   </bean> -->

   <!-- only needed if you want to bind via a user to LDAP
   <bean id="springSecurityAuthenticationSource" class="org.springframework.security.ldap.authentication.SpringSecurityAuthenticationSource" />-->

    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="viewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--Spring Web Services Client-->
    <bean id="sasWebServicesTemplate" class="org.jasig.portlet.blackboardvcportlet.service.util.SASWebServiceTemplate">
        <constructor-arg index="0" value="${bbc.username}"/>
        <constructor-arg index="1" value="${bbc.password}"/>
        <property name="marshaller" ref="elluminateMarshaller"/>
        <property name="unmarshaller" ref="elluminateMarshaller"/>
        <property name="messageSender" ref="webServiceMessageSender"/>
        <property name="checkConnectionForFault" value="false" />
        <property name="defaultUri" value="${sas.defaultUri}"/>
    </bean>
    <bean id="elluminateObjectFactory" class="com.elluminate.sas.ObjectFactory"/>
    <bean id="elluminateMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPaths">
            <list>
                <value>com.elluminate.sas</value>
            </list>
        </property>
    </bean>
    <bean id="webServiceMessageSender" class="org.springframework.ws.transport.http.HttpComponentsMessageSender">
        <property name="httpClient" ref="httpClient"/>
    </bean>
    <bean id="httpClient" class="org.jasig.apache.http.impl.client.ResponseHeaderHandlingHttpClient" depends-on="httpConnectionParamBean, clientParamBean">
        <constructor-arg ref="httpConnectionManager" />
        <constructor-arg ref="httpParams"/>
    </bean>
    <bean id="httpConnectionManager" class="org.jasig.apache.http.impl.conn.CleanShutdownPoolingClientConnectionManager" destroy-method="shutdown">
        <property name="defaultMaxPerRoute" value="1000" />
        <property name="maxTotal" value="1000" />
    </bean>
    <bean id="httpParams" class="org.apache.http.params.BasicHttpParams"/>
    <bean id="httpConnectionParamBean" class="org.apache.http.params.HttpConnectionParamBean">
        <constructor-arg index="0">
            <ref bean="httpParams"/>
        </constructor-arg>
        <property name="connectionTimeout" value="5000"/>
        <property name="soTimeout" value="30000"/>
        <property name="staleCheckingEnabled" value="true"/>
    </bean>
    <bean id="clientParamBean" class="org.apache.http.client.params.ClientParamBean">
        <constructor-arg index="0">
            <ref bean="httpParams"/>
        </constructor-arg>
        <property name="cookiePolicy" value="ignoreCookies"/>
    </bean>

</beans>
