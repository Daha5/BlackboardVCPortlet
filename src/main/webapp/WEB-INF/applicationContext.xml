<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:sws="http://www.springframework.org/schema/web-services"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
       xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd 
           http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
           http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd"
      default-autowire="byType">


    <tx:annotation-driven transaction-manager="transactionManager" />
    <sws:annotation-driven  />
    
    <context:annotation-config />
    <context:property-placeholder location="classpath:/webapp.properties" />
    <context:component-scan base-package="org.jasig.portlet.blackboardvcportlet" />    

    <!-- Set the datasource details to the database where you want to cache Collaborate data --> 
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" >
	    	<value>${bbc.db.driverClassName}</value>
	    </property>
	    <property name="url">
	    	<value>${bbc.db.jdbc}</value>
	    </property>
	    <property name="username" >
	    	<value>${bbc.db.username}</value>
	    </property>
	    <property name="password">
	    	<value>${bbc.db.password}</value>
	    </property>
    </bean>   
      
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
	        <list>
	            <value>org.jasig.portlet.blackboardvcportlet.data.ServerQuota</value>
                <value>org.jasig.portlet.blackboardvcportlet.data.ServerConfiguration</value>
                <value>org.jasig.portlet.blackboardvcportlet.data.Session</value>
                <value>org.jasig.portlet.blackboardvcportlet.data.SessionUrl</value>
                <value>org.jasig.portlet.blackboardvcportlet.data.RecordingUrl</value>
                <value>org.jasig.portlet.blackboardvcportlet.data.RecordingShort</value>
                <value>org.jasig.portlet.blackboardvcportlet.data.SessionMultimedia</value>
                <value>org.jasig.portlet.blackboardvcportlet.data.SessionPresentation</value>
                <value>org.jasig.portlet.blackboardvcportlet.data.SessionExtParticipant</value>
	        </list>
	    </property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
                                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
								<!-- For first run, uncommenting this out will autocreate the DB schema objects for you-->
                                <prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
    </bean> 
  	
    
	
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	<property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
	<!-- Set this to the value of your mail host -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="${mail.host}"/>
      <property name="port" value="${mail.port}" />
    </bean>
    
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
     <property name="corePoolSize" value="5" />
     <property name="maxPoolSize" value="10" />
     <property name="queueCapacity" value="25" />
    </bean>

    <bean id="jasigMailTemplateService" class="org.jasig.portlet.blackboardvcportlet.service.MailTemplateService">
      <constructor-arg ref="taskExecutor" />
    </bean>
    
    <!-- Define the four email templates which are to be used. -->
    <bean id="moderatorMailMessage" class="org.springframework.mail.SimpleMailMessage">
	<property name="from" value="${mail.from}" />
	<property name="subject" value="Collaborate Session Invite" />
	<property name="text">
	   <value><![CDATA[Dear %s

You have been enrolled as a Moderator and are invited by %s to attend the following Collaborate session: %s

Session Details
Start Date and Time: %s
End Date and Time: %s

To join the session, click on the following link to launch uPortal: %s
               
Contact %s if you have any questions about the session.]]></value>
        </property>
     </bean>
         
    <bean id="intParticipantMailMessage" class="org.springframework.mail.SimpleMailMessage">
	<property name="from" value="${mail.from}" />
	<property name="subject" value="Collaborate Session Invite" />
	<property name="text">
	   <value><![CDATA[Dear %s

You have been invited by %s to attend the following Collaborate session: %s

Session Details
Start Date and Time: %s
End Date and Time: %s

To join the session, click on the following link: %s
               
If the link does not work, you may need to copy and paste the link into your browser (ensure that you copy and paste the whole link).
               
Contact %s if you have any questions about the session.]]></value>
        </property>
     </bean>
     
    <bean id="extParticipantMailMessage" class="org.springframework.mail.SimpleMailMessage">
	<property name="from" value="${mail.from}" />
	<property name="subject" value="Collaborate Session Invite" />
	<property name="text">
	   <value><![CDATA[Dear %s

You have been invited by %s to attend the following Collaborate session: %s

Session Details
Start Date and Time: %s
End Date and Time: %s

To join the session, click on the following link: %s

If the link does not work, you may need to cut and paste it into a browser (ensure that you cut and paste the whole link).

Contact %s if you have any questions about the session.]]></value>
        </property>
     </bean>
     
     <bean id="sessionDeletionMessage" class="org.springframework.mail.SimpleMailMessage">
	<property name="from" value="${mail.from}" />
	<property name="subject" value="Collaborate Session Cancellation" />
	<property name="text">
	   <value><![CDATA[Dear %s

%s invited you to participate in the following Collaborate session: %s

Session Details
Start Date and Time: %s
End Date and Time: %s

This session has now been cancelled.

Please contact %s if you have any questions.]]></value>
        </property>
     </bean>
    
     <!-- Configure the multipart resolver -->
    <bean id="portletMultipartResolver" class="org.springframework.web.portlet.multipart.CommonsPortletMultipartResolver">  
        <property name="maxUploadSize" value="10000000"/>
    </bean>

   <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">  
    <property name="basenames">  
        <list>
            <value>messages</value>
        </list>
    </property>
   </bean>
	<bean id="userService" class="org.jasig.portlet.blackboardvcportlet.service.impl.DefaultUserServiceImpl" />
	<!-- Only needed if you want to bind via a user to LDAP
   <bean id="authenticationSource" class="org.springframework.ldap.authentication.DefaultValuesAuthenticationSourceDecorator">
      <property name="target" ref="springSecurityAuthenticationSource" />
      <property name="defaultUser" value="uid=vcuser,ou=people,dc=example,dc=com" />
      <property name="defaultPassword" value="" />
   </bean> -->

   <!-- only needed if you want to bind via a user to LDAP
   <bean id="springSecurityAuthenticationSource" class="org.springframework.security.ldap.authentication.SpringSecurityAuthenticationSource" />-->

    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="viewResolver" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>

    <!--Spring Web Services Client-->
    <bean id="sasWebServicesTemplate" class="org.jasig.portlet.blackboardvcportlet.service.util.SASWebServiceTemplate">
        <constructor-arg index="0" value="${bbc.username}"/>
        <constructor-arg index="1" value="${bbc.password}"/>
        <property name="marshaller" ref="elluminateMarshaller"/>
        <property name="unmarshaller" ref="elluminateMarshaller"/>
        <property name="messageSender" ref="webServiceMessageSender"/>
        <property name="checkConnectionForFault" value="false" />
        <property name="defaultUri" value="https://sas-int.elluminate.com/site/external/adapter/default/v3/webservice.event"/>
    </bean>
    <bean id="elluminateObjectFactory" class="com.elluminate.sas.ObjectFactory"/>
    <bean id="elluminateMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPaths">
            <list>
                <value>com.elluminate.sas</value>
            </list>
        </property>
    </bean>
    <bean id="webServiceMessageSender" class="org.springframework.ws.transport.http.HttpComponentsMessageSender">
        <property name="httpClient" ref="httpClient"/>
    </bean>
    <bean id="httpClient" class="org.jasig.apache.http.impl.client.ResponseHeaderHandlingHttpClient" depends-on="httpConnectionParamBean, clientParamBean">
        <constructor-arg ref="httpConnectionManager" />
        <constructor-arg ref="httpParams"/>
    </bean>
    <bean id="httpConnectionManager" class="org.jasig.apache.http.impl.conn.CleanShutdownPoolingClientConnectionManager" destroy-method="shutdown">
        <property name="defaultMaxPerRoute" value="1000" />
        <property name="maxTotal" value="1000" />
    </bean>
    <bean id="httpParams" class="org.apache.http.params.BasicHttpParams"/>
    <bean id="httpConnectionParamBean" class="org.apache.http.params.HttpConnectionParamBean">
        <constructor-arg index="0">
            <ref bean="httpParams"/>
        </constructor-arg>
        <property name="connectionTimeout" value="5000"/>
        <property name="soTimeout" value="30000"/>
        <property name="staleCheckingEnabled" value="true"/>
    </bean>
    <bean id="clientParamBean" class="org.apache.http.client.params.ClientParamBean">
        <constructor-arg index="0">
            <ref bean="httpParams"/>
        </constructor-arg>
        <property name="cookiePolicy" value="ignoreCookies"/>
    </bean>

</beans>
